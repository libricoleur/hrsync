#!/usr/bin/env bash

# hrsync by Daniele Paroli
#
# simple script to backup a directory with rsync detecting moved and renamed files
#
# use it at your own risk, please see README and LICENSE files

# ------------------------------------------------------------
# Backup source and target directory 

Source="${1%/}"
Target="${2%/}"

# ------------------------------------------------------------
# Name of shadow directory
Shadow=".rsync_shadow"


# Start doing things

if [ -z "$2" ]
then
	echo "Usage:"
	echo "	hrsync source target"
	echo "Example:"
	echo "	hrsync /home/user/Documents /mnt/external/Documents"
	echo "Please see the README file"

	exit 0
fi


if [ ! -d "$Source/$Shadow" ] 
then
	# first time run: create source shadow
	rsync -a --delete --link-dest="$Source" --exclude="/$Shadow" "$Source"/ "$Source/$Shadow"
fi

# Create the target if needed
if [ ! -e "$Target" ]
then
	mkdir "$Target"
	# make dummy symlink
	ln -s "$Target" "$Target/latest"
fi

# check if the target directory looks like what we expect
if [ ! -h "$Target/latest" ] && [ ! -h "$Target/old" ]
then
	echo "Please prepare your target directory."
	echo "See the README file."

	exit 1
fi

# change the links for the run
if [ ! -e "$Target/old" ]
then
	mv "$Target/latest" "$Target/old"
fi

# create current link
if [ ! -e "$Target/current" ]
then
	current=`date "+%Y-%m-%dT%H:%M:%S"`
	mkdir "$Target/$current"
	ln -rs "$Target/$current" "$Target/current"
fi

# do real syncronization
rsync -axXhHv --link-dest="$Target/old" --stats --no-inc-recursive --numeric-ids --delete --delete-after "$Source"/ "$Target/current"
status=$?

if [ $status -eq 0 ]
then
	#update source shadow directory
	rsync -a --delete --link-dest="$Source" --exclude="/$Shadow" "$Source"/ "$Source/$Shadow"

	#update target shadow directory
	rsync -a --delete --link-dest="$Target/current" --exclude="/$Shadow" "$Target/current/" "$Target/current/$Shadow"

	# put the links back in place
	rm "$Target/old"
	mv "$Target/current" "$Target/latest"
fi

exit $status
